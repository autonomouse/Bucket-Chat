[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bucket-chat"
version = "0.1.0"
description = "Reference implementation of the Bucket Chat Protocol - a decentralized, serverless chat system"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Bucket Chat Contributors"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Security :: Cryptography",
]
requires-python = ">=3.9"
dependencies = [
    # Core dependencies
    "cloudpathlib[all]>=0.16.0",
    "cryptography>=41.0.0",
    "pydantic>=2.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "textual>=0.40.0",
    "httpx>=0.25.0",
    "python-jose>=3.3.0",
    "keyring>=24.0.0",
    "watchdog>=3.0.0",
    "aiofiles>=23.0.0",
    
    # OAuth 2.0 authentication
    "authlib>=1.2.0",
    "google-auth>=2.23.0",
    "google-auth-oauthlib>=1.1.0",
    "msal>=1.24.0",
    
    # Terminal UI enhancements
    "prompt-toolkit>=3.0.0",
    "colorama>=0.4.0",
    "blessed>=1.20.0",
    
    # Configuration and settings
    "python-dotenv>=1.0.0",
    "toml>=0.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
]
sync = [
    "asyncio-mqtt>=0.13.0",
    "websockets>=11.0.0",
]
monitoring = [
    "psutil>=5.9.0",
]

[project.scripts]
bucket-chat = "bucket_chat.cli.main:main"

[project.urls]
Homepage = "https://github.com/your-org/bucket-chat"
Documentation = "https://bucket-chat.readthedocs.io/"
Repository = "https://github.com/your-org/bucket-chat.git"
"Bug Tracker" = "https://github.com/your-org/bucket-chat/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]